//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../android/src/main/kotlin/lib/com/afterlogic/pgp/encryption_signing/EncryptionBuilderInterface.java
//

#include "EncryptionBuilderInterface.h"
#include "J2ObjC_source.h"

@interface LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface : NSObject

@end

@interface LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_ToRecipients : NSObject

@end

@interface LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms : NSObject

@end

@interface LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith : NSObject

@end

@interface LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor : NSObject

@end

@implementation LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_ToRecipients;", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onOutputStreamWithJavaIoOutputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onOutputStream", "LJavaIoOutputStream;", "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_ToRecipients;LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith;LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface = { "EncryptionBuilderInterface", "lib.com.afterlogic.pgp.encryption_signing", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, 2, -1, -1, -1 };
  return &_LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface)

@implementation LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_ToRecipients

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x481, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x481, 0, 2, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x481, 0, 3, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x401, 0, 4, -1, 5, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(toRecipients);
  methods[1].selector = @selector(toRecipientsWithLibOrgBouncycastleOpenpgpPGPPublicKeyArray:);
  methods[2].selector = @selector(toRecipientsWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingArray:);
  methods[3].selector = @selector(toRecipientsWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollectionArray:);
  methods[4].selector = @selector(toRecipientsWithLibComAfterlogicPgpKeySelectionKeyringPublicKeyRingSelectionStrategy:withLibComAfterlogicPgpUtilMultiMap:);
  methods[5].selector = @selector(doNotEncrypt);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toRecipients", "[LLibOrgBouncycastleOpenpgpPGPPublicKey;", "[LLibOrgBouncycastleOpenpgpPGPPublicKeyRing;", "[LLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection;", "LLibComAfterlogicPgpKeySelectionKeyringPublicKeyRingSelectionStrategy;LLibComAfterlogicPgpUtilMultiMap;", "<O:Ljava/lang/Object;>(Llib/com/afterlogic/pgp/key/selection/keyring/PublicKeyRingSelectionStrategy<TO;>;Llib/com/afterlogic/pgp/util/MultiMap<TO;Llib/org/bouncycastle/openpgp/PGPPublicKeyRingCollection;>;)Llib/com/afterlogic/pgp/encryption_signing/EncryptionBuilderInterface$WithAlgorithms;", "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_ToRecipients = { "ToRecipients", "lib.com.afterlogic.pgp.encryption_signing", ptrTable, methods, NULL, 7, 0x609, 6, 0, 6, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_ToRecipients;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_ToRecipients)

@implementation LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x481, 0, 1, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x481, 0, 2, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x401, 0, 3, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;", 0x401, 0, 4, -1, 5, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith;", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(andToSelfWithLibOrgBouncycastleOpenpgpPGPPublicKeyArray:);
  methods[1].selector = @selector(andToSelfWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingArray:);
  methods[2].selector = @selector(andToSelfWithLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection:);
  methods[3].selector = @selector(andToSelfWithLibComAfterlogicPgpKeySelectionKeyringPublicKeyRingSelectionStrategy:withLibComAfterlogicPgpUtilMultiMap:);
  methods[4].selector = @selector(usingAlgorithmsWithLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm:withLibComAfterlogicPgpAlgorithmHashAlgorithmUtil:withLibComAfterlogicPgpAlgorithmCompressionAlgorithm:);
  methods[5].selector = @selector(usingSecureAlgorithms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "andToSelf", "[LLibOrgBouncycastleOpenpgpPGPPublicKey;", "[LLibOrgBouncycastleOpenpgpPGPPublicKeyRing;", "LLibOrgBouncycastleOpenpgpPGPPublicKeyRingCollection;", "LLibComAfterlogicPgpKeySelectionKeyringPublicKeyRingSelectionStrategy;LLibComAfterlogicPgpUtilMultiMap;", "<O:Ljava/lang/Object;>(Llib/com/afterlogic/pgp/key/selection/keyring/PublicKeyRingSelectionStrategy<TO;>;Llib/com/afterlogic/pgp/util/MultiMap<TO;Llib/org/bouncycastle/openpgp/PGPPublicKeyRingCollection;>;)Llib/com/afterlogic/pgp/encryption_signing/EncryptionBuilderInterface$WithAlgorithms;", "usingAlgorithms", "LLibComAfterlogicPgpAlgorithmSymmetricKeyAlgorithm;LLibComAfterlogicPgpAlgorithmHashAlgorithmUtil;LLibComAfterlogicPgpAlgorithmCompressionAlgorithm;", "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms = { "WithAlgorithms", "lib.com.afterlogic.pgp.encryption_signing", ptrTable, methods, NULL, 7, 0x609, 6, 0, 8, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_WithAlgorithms)

@implementation LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor;", 0x481, 0, 1, -1, 2, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor;", 0x481, 0, 3, -1, 4, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor;", 0x401, 0, 5, 6, 7, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(signWithWithLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector:withLibOrgBouncycastleOpenpgpPGPSecretKeyArray:);
  methods[1].selector = @selector(signWithWithLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector:withLibOrgBouncycastleOpenpgpPGPSecretKeyRingArray:);
  methods[2].selector = @selector(signWithWithLibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy:withLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector:withLibComAfterlogicPgpUtilMultiMap:);
  methods[3].selector = @selector(doNotSign);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "signWith", "LLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector;[LLibOrgBouncycastleOpenpgpPGPSecretKey;", "<O:Ljava/lang/Object;>(Llib/com/afterlogic/pgp/key/protection/SecretKeyRingProtector;[Llib/org/bouncycastle/openpgp/PGPSecretKey;)Llib/com/afterlogic/pgp/encryption_signing/EncryptionBuilderInterface$Armor;", "LLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector;[LLibOrgBouncycastleOpenpgpPGPSecretKeyRing;", "<O:Ljava/lang/Object;>(Llib/com/afterlogic/pgp/key/protection/SecretKeyRingProtector;[Llib/org/bouncycastle/openpgp/PGPSecretKeyRing;)Llib/com/afterlogic/pgp/encryption_signing/EncryptionBuilderInterface$Armor;", "LLibComAfterlogicPgpKeySelectionKeyringSecretKeyRingSelectionStrategy;LLibComAfterlogicPgpKeyProtectionSecretKeyRingProtector;LLibComAfterlogicPgpUtilMultiMap;", "LLibComAfterlogicPgpExceptionSecretKeyNotFoundException;", "<O:Ljava/lang/Object;>(Llib/com/afterlogic/pgp/key/selection/keyring/SecretKeyRingSelectionStrategy<TO;>;Llib/com/afterlogic/pgp/key/protection/SecretKeyRingProtector;Llib/com/afterlogic/pgp/util/MultiMap<TO;Llib/org/bouncycastle/openpgp/PGPSecretKeyRingCollection;>;)Llib/com/afterlogic/pgp/encryption_signing/EncryptionBuilderInterface$Armor;", "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith = { "SignWith", "lib.com.afterlogic.pgp.encryption_signing", ptrTable, methods, NULL, 7, 0x609, 4, 0, 8, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_SignWith)

@implementation LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionStream;", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "LLibComAfterlogicPgpEncryption_signingEncryptionStream;", 0x401, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(asciiArmor);
  methods[1].selector = @selector(noArmor);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;LLibOrgBouncycastleOpenpgpPGPException;", "LLibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface;" };
  static const J2ObjcClassInfo _LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor = { "Armor", "lib.com.afterlogic.pgp.encryption_signing", ptrTable, methods, NULL, 7, 0x609, 2, 0, 1, -1, -1, -1, -1 };
  return &_LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(LibComAfterlogicPgpEncryption_signingEncryptionBuilderInterface_Armor)
